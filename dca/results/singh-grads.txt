Comparing gradient methods for Singh:
Regular, Residual, Gradient-Correction, Least-Squares

Least-Squares found to be unsuited for control
-----------------------------------------------------------------------------------
First, find good values with/without beta for regular Singh.

results-dlib-singhnet-net_lr-beta.log
Best from an incomplete DLIB hopt session
singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --beta 1700 --net_lr 1.55e-6
Average cumulative block probability over 4 episodes: 0.1524 with standard deviation 0.00070

hopt-mongo:singhnet-net_lr-beta2
Best from many hopt runs, with possibly too lower upper bound on beta
singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --beta 25.569630119649283 --net_lr 2.2072432429125095e-05
Average cumulative block probability over 4 episodes: 0.1464 with standard deviation 0.00114

hopt-mongo:singhnet-net_lr-nodt
singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06
Average cumulative block probability over 4 episodes: 0.1425 with standard deviation 0.00186

Find out if lr decay matters (above was default 0.96)
singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 1
Average cumulative block probability over 4 episodes: 0.1416 with standard deviation 0.00050

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.9
Average cumulative block probability over 4 episodes: 0.1338 with standard deviation 0.00113

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.8
Average cumulative block probability over 4 episodes: 0.1316 with standard deviation 0.00112

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7
Average cumulative block probability over 4 episodes: 0.1306 with standard deviation 0.00167

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.6
Average cumulative block probability over 4 episodes: 0.1326 with standard deviation 0.00112

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.5
Average cumulative block probability over 4 episodes: 0.1333 with standard deviation 0.00093

-----------------------------------------------------------------------------------
Compare regular vs residual gradient

NOTE PS: Residual gradients may require higher learning rate
residsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 16 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7
Average cumulative block probability over 16 episodes: 0.1353 with standard deviation 0.00184

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 16 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7
Average cumulative block probability over 16 episodes: 0.1329 with standard deviation 0.00218

-----------------------------------------------------------------------------------

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-5
Average cumulative block probability over 4 episodes: 0.1359 with standard deviation 0.00113

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-6
Average cumulative block probability over 4 episodes: 0.1340 with standard deviation 0.00096

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-7
Average cumulative block probability over 4 episodes: 0.1336 with standard deviation 0.00099

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-8
Average cumulative block probability over 4 episodes: 0.1322 with standard deviation 0.00166

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-9
Average cumulative block probability over 4 episodes: 0.1314 with standard deviation 0.00104

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-10
Average cumulative block probability over 4 episodes: 0.1314 with standard deviation 0.00203

tdcsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --weight_beta 1e-9
Average cumulative block probability over 16 episodes: 0.1311 with standard deviation 0.00227

----------------
WARNING: Even though (some) results below uses avg-reward, it is unknown if the code for
avg-rewrd triggered or if discount was actually used.
--------------------------------------------------------
singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-1
Average cumulative block probability over 4 episodes: 0.1315 with standard deviation 0.00144

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1321 with standard deviation 0.00102

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-3
Average cumulative block probability over 4 episodes: 0.1316 with standard deviation 0.00154

singhnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1315 with standard deviation 0.00188

--------------------
Should possible have used lower learning rate here, since returns are two-step

psinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 16 --net_lr 1.4507946347120976e-06 --net_lr_decay 0.7
Average cumulative block probability over 16 episodes: 0.1317 with standard deviation 0.00180

---
NOTE
for standard singh with epol nom_greedy_fixed, -opt sgd-m -lr 1e-8
seems good, even better than sgd

singhnet -phoff 0 -lr 1e-8 -epol nom_greedy
Blocking probability: 0.1236 for new calls, 0.0000 for handoffs

singhnet -phoff 0 -lr 1e-8
Blocking probability: 0.1291 for new calls, 0.0000 for handoffs

--------------------------------------------------------

Importance sampling or not?
First find usable epsilon for Average-singh with standard Boltzmann explore

singhnet -phoff 0 -epol boltzmann -eps 1 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1308 with standard deviation 0.00069

singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1301 with standard deviation 0.00235

singhnet -phoff 0 -epol boltzmann -eps 3 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1309 with standard deviation 0.00121

singhnet -phoff 0 -epol boltzmann -eps 4 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1328 with standard deviation 0.00114

Now compare with imp sampling:
singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4 --importance_sampling
Average cumulative block probability over 4 episodes: 0.1302 with standard deviation 0.00123

singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4 --importance_sampling
Average cumulative block probability over 16 episodes: 0.1329 with standard deviation 0.00198

SWITCHING TO GREEDY, OFF POLICY SINGH
singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4 --importance_sampling
Average cumulative block probability over 16 episodes: 0.1317 with standard deviation 0.00123


singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 16 episodes: 0.1307 with standard deviation 0.00171

TESTING WOLF LEARNING RATE
wolfsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4 --wolf 1.3

-------------------------------------
Avg reward vs regular (average reward IS ACTUALLY active here)
p3 runner.py singhnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7
Average cumulative block probability over 4 episodes: 0.1307 with standard deviation 0.00266


avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-1
Average cumulative block probability over 4 episodes: 0.1309 with standard deviation 0.00120

avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1302 with standard deviation 0.00131

avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-3
Average cumulative block probability over 4 episodes: 0.1389 with standard deviation 0.00189

avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-4
Average cumulative block probability over 4 episodes: 0.1479 with standard deviation 0.00248

avgsinghnet -phoff 0 -epol greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1316 with standard deviation 0.00137

NOTE
average reward was updated even on exploratory actions above. this is not correct
Fixing so that avg.reward is only updated on greedy:

avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1268 with standard deviation 0.00118

avgsinghnet -phoff 0 -epol bgumbel -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1299 with standard deviation 0.00076

p3 runner.py avgsinghnet -phoff 0 -epol nom_greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1268 with standard deviation 0.00118

p3 runner.py avgsinghnet -phoff 0 -epol nom_fixed_greedy -opt sgd --no_gpu --avg_runs 4 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 4 episodes: 0.1346 with standard deviation 0.00291

avgsinghnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --avg_runs 16 --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2
Average cumulative block probability over 16 episodes: 0.1267 with standard deviation 0.00172


------------------------------------------------------------
RSMART MDP Robbins-Monro
Testing weight-beta, with weight_beta decay at default 0.999_999

p3 runner.py rsmartmdpnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 5e-3 --avg_runs 4
Average cumulative block probability over 4 episodes: 0.1311 with standard deviation 0.00120

p3 runner.py rsmartmdpnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 1e-2 --avg_runs 4
Average cumulative block probability over 4 episodes: 0.1297 with standard deviation 0.00108

p3 runner.py rsmartmdpnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 5e-2 --avg_runs 4
Average cumulative block probability over 4 episodes: 0.1292 with standard deviation 0.00214

Testing weight-beta decay; weight_beta fixed at 5e-2
p3 runner.py rsmartmdpnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 5e-2 --avg_runs 4 --weight_beta_decay 1
Average cumulative block probability over 4 episodes: 0.1287 with standard deviation 0.00124

p3 runner.py rsmartmdpnet -phoff 0 -epol boltzmann -eps 2 -opt sgd --no_gpu --net_lr 1.45e-06 --net_lr_decay 0.7 --avg_reward --weight_beta 5e-2 --avg_runs 4 --weight_beta_decay 0.9_999
Average cumulative block probability over 4 episodes: 0.1332 with standard deviation 0.00154

---------
dlib tuning test

NOTE: Below run does not have kernel init dense=zeros
p3 runner.py avgsinghnet -phoff 0 -epol boltzmann -opt sgd --no_gpu --avg_reward --weight_beta 0.0129006 --net_lr 2.51769e-06 --epsilon 2.10259 --epsilon_decay 0.999901 --net_lr_decay 0.781374 --avg_runs 16
Average cumulative block probability over 16 episodes: 0.1258 with standard deviation 0.00166
[[0.1266531  0.        ]
 [0.12718609 0.        ]
 [0.12659191 0.        ]
 [0.12464918 0.        ]
 [0.12605564 0.        ]
 [0.12627604 0.        ]
 [0.12357556 0.        ]
 [0.12315377 0.        ]
 [0.12678434 0.        ]
 [0.12506676 0.        ]
 [0.12492726 0.        ]
 [0.12414571 0.        ]
 [0.12577391 0.        ]
 [0.12629944 0.        ]
 [0.13050424 0.        ]
 [0.12592374 0.        ]]

----------

on-policy, vs off-policy, vs off-policy with imp sampling
p3 main.py tdcsinghnet -epol boltzmann -eps 3 --epsilon_decay 0.99999 --avg_runs 16

on-policy: p=1, self.next_val=next_val, self.next_frep=next_frep
Average new call block each log iter: 0.1228, 0.1240, 0.1251, 0.1215, 0.1231, 0.1244, 0.1259, 0.1238
Average cumulative block probability over 16 episodes: 0.1238 with standard deviation 0.00181

?? p=p, self.next_val=next_val, self.next_frep=next_frep
Average new call block each log iter: 0.1226, 0.1254, 0.1253, 0.1235, 0.1250, 0.1224, 0.1221, 0.1244
Average cumulative block probability over 16 episodes: 0.1239 with standard deviation 0.00151

off-policy: p=1, self.next_val=next_max_val, self.next_frep=next_max_frep
Average new call block each log iter: 0.1224, 0.1241, 0.1272, 0.1269, 0.1236, 0.1242, 0.1249, 0.1245
Average cumulative block probability over 16 episodes: 0.1247 with standard deviation 0.00151

off-policy w/imp: p=p, self.next_val=next_max_val, self.next_frep=next_max_frep
Average new call block each log iter: 0.1209, 0.1258, 0.1262, 0.1253, 0.1235, 0.1220, 0.1260, 0.1236
Average cumulative block probability over 16 episodes: 0.1242 with standard deviation 0.00184

----------------
Testing new prep net variant where only 1 set of nom chs are trained on at a time
Starting simulation at 2018-04-05 00:52:55.715614 with params:
{'strat': 'singhnet', 'rows': 7, 'cols': 7, 'n_channels': 70, 'erlangs': 10, 'traffic_preset': 'uniform', 'call_rate': 3.3333333333333335, 'call_duration': 3, 'p_handoff': 0.0, 'hoff_call_duration': 1, 'n_events': 470000, 'n_hours': None, 'breakout_thresh': 0.23, 'avg_runs': 4, 'exp_policy_cmp': None, 'alpha': 0.01938893, 'alpha_decay': 0.9999999, 'wolf': 1, 'exp_policy': 'boltzmann', 'exp_policy_param': None, 'epsilon': 2.10259, 'epsilon_decay': 0.9999, 'gamma': None, 'gamma_end': None, 'weight_beta': 0.013, 'weight_beta_decay': 0.999999, 'grad_beta': 1e-05, 'reward_type': 'callcount', 'beta': None, 'beta_disc': False, 'importance_sampling': False, 'target': 'avg', 'lambda': None, 'min_alpha': 0.0, 'save_exp_data': False, 'restore_qtable': '', 'random_hopt': None, 'dlib_hopt': None, 'hopt': None, 'hopt_fname': None, 'net_lr': 2.52e-06, 'net_lr_decay': 0.78, 'optimizer': 'sgd', 'huber_loss': None, 'max_grad_norm': None, 'weight_init_conv': 'glorot_unif', 'qnom_lo': 0.5, 'qnom_hi': 1.5, 'weight_init_dense': 'zeros', 'conv_nfilters': [80, 70], 'conv_kernel_sizes': [4, 3], 'conv_bias': False, 'pre_conv': False, 'prep_net': 50, 'n_step': 1, 'bighead': False, 'dueling_qnet': False, 'layer_norm': False, 'l2_conv': False, 'l2_scale': 1e-05, 'l2_dense': False, 'top_stack': False, 'frep_type': 'vanilla', 'singh_grid': False, 'qnet_freps': False, 'qnet_freps_only': False, 'scale_freps': False, 'act_fn': 'relu', 'save_net': False, 'restore_net': False, 'batch_size': 1, 'buffer_size': 1000, 'bench_batch_size': False, 'net_copy_iter': 5, 'net_copy_iter_decr': None, 'net_creep_tau': 0.12, 'vf_coeff': 0.02, 'entropy_coeff': 10.0, 'train_net': 0, 'analyze_net': False, 'gpu': False, 'max_gpu_procs': 3, 'rng_seed': 0, 'verify_grid': False, 'debug': False, 'profiling': False, 'tfprofiling': '', 'print_weights': False, 'gui': False, 'do_plot': False, 'log_level': 20, 'log_file': None, 'log_iter': 58750, 'grid_split': True, 'freps': False, 'dims': (7, 7, 70), 'net': True}

p3 main.py singhnet --avg_runs 4 --prep_net 0
Average cumulative block probability over 4 episodes: 0.1261 with standard deviation 0.00188

p3 main.py singhnet --avg_runs 4 --prep_net 1
Average cumulative block probability over 4 episodes: 0.1261 with standard deviation 0.00110

p3 main.py singhnet --avg_runs 4 --prep_net 50
Average cumulative block probability over 4 episodes: 0.1269 with standard deviation 0.00094
        
p3 main.py singhnet --avg_runs 4 --prep_net 200
Average cumulative block probability over 4 episodes: 0.1258 with standard deviation 0.00127

Does not seem to have ANY kind of effect .. WTF?
--------------------

