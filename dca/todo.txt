Promising, but diverges(?) over time

p3 runner.py vconvnet -phoff 0 --no_gpu -epol nom_greedy -opt sgd -lr 1e-6 --print_weights --conv_nfilters 80 --conv_kernel_sizes 5

TODO:
Fix/analyze divergence for net above

bgumbel maybe a little tiny bit more stable. worse performing initially. 
why is it a bit more stable?
   Because selecting actions greedily causes divergence?

how to combine bgumbel with nominal preference?
   modify bgumbel perturbations for nom chs?
   nominal init in conv layer?
can approach be improved with:
  - avg rewards
  - beta discount
  - off policy (with/wo imp sampling)
  - grad correction
  - separable conv
  - non-shared conv
  - fine tuning filter/kernel size
Why lucky runs? Save net inits from lucky runs and retest them.

---
Blocking probability events 465000-470000: 0.1455, cumulative 0.1225

Simulation duration: 25.68 sim hours, 35m56s real, 470000 events at 218 events/second

Blocking probability: 0.1225 for new calls, 0.0000 for handoffs
p3 runner.py expsinghnet -phoff 0 -opt sgd -lr 2e-7 --batch_size 5 --buffer_size 1000 --weight_init_dense zeros -epol nom_fixed_greedy --no_gpu --gamma 0.78 --gamma_end 0.85

